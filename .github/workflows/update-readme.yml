name: Update README

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:     # Manual trigger
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  update:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed to get full git history

      - name: Make scripts executable
        run: chmod +x .github/scripts/*.sh

      - name: Get registration date
        id: get_date
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          DATE=$(bash .github/scripts/get_first_commit.sh "${{ github.repository_owner }}")
          echo "FIRST_COMMIT_DATE=$DATE" >> $GITHUB_ENV
          echo "Got first commit date: $DATE"

      - name: Get external commits
        id: external_commits
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          EXTERNAL=$(./.github/scripts/get_external_commits.sh "${{ github.repository_owner }}")
          echo "EXTERNAL_COMMITS=$EXTERNAL" >> $GITHUB_ENV
          echo "Got external commits: $EXTERNAL"
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Update README
        env:
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          FIRST_COMMIT_DATE: ${{ env.FIRST_COMMIT_DATE }}
          EXTERNAL_COMMITS: ${{ env.EXTERNAL_COMMITS }}
        run: |
          python -m pip install --upgrade pip
          python .github/scripts/update_readme.py
          cat README.md
          
      - name: Commit and push changes
        if: github.ref == 'refs/heads/main'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add README.md
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "ðŸ“… Automatic README update [skip ci]"
            git pull --rebase
            git push
          fi
